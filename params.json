{"name":"General","tagline":"Specification for general performance metrics.","body":"General\r\n===\r\n\r\n> A specification for general performance metrics.\r\n\r\n\r\n## Metrics\r\n\r\n#### [load.1m](http://linux.die.net/man/5/proc)\r\n\r\nThe average number of jobs in the run queue (state R) or waiting for disk I/O (state D) over the past minute.\r\n\r\nMin | Max | Units | Metric Type | Data Type \r\n:---: | :---: | :---: | ---: | ---: |\r\n0 | `MAX_FLOAT` | processes and threads | raw | [numeric](https://github.com/doc-metrix/data-types#numeric)\r\n\r\n\r\n#### [load.5m](http://linux.die.net/man/5/proc)\r\n\r\nThe average number of jobs in the run queue (state R) or waiting for disk I/O (state D) over the past 5 minutes.\r\n\r\nMin | Max | Units | Metric Type | Data Type \r\n:---: | :---: | :---: | ---: | ---: |\r\n0 | `MAX_FLOAT` | processes and threads | raw | [numeric](https://github.com/doc-metrix/data-types#numeric)\r\n\r\n\r\n#### [load.15m](http://linux.die.net/man/5/proc)\r\n\r\nThe average number of jobs in the run queue (state R) or waiting for disk I/O (state D) over the past 15 minutes.\r\n\r\nMin | Max | Units | Metric Type | Data Type \r\n:---: | :---: | :---: | ---: | ---: |\r\n0 | `MAX_FLOAT` | processes and threads | raw | [numeric](https://github.com/doc-metrix/data-types#numeric)\r\n\r\n\r\n#### [load.running](http://linux.die.net/man/5/proc)\r\n\r\nThe number of currently running kernel scheduled entities (processes and threads).\r\n\r\nMin | Max | Units | Metric Type | Data Type \r\n:---: | :---: | :---: | ---: | ---: |\r\n1 | `null` | processes and threads | raw | [integer](https://github.com/doc-metrix/data-types#integer)\r\n\r\n\r\n#### [load.threads](http://linux.die.net/man/5/proc)\r\n\r\nThe number of kernel scheduled entities (processes and threads) that exist in the system.\r\n\r\nMin | Max | Units | Metric Type | Data Type \r\n:---: | :---: | :---: | ---: | ---: |\r\n0 | `null` | processes and threads | raw | [integer](https://github.com/doc-metrix/data-types#integer)\r\n\r\n\r\n#### [load.lastPID](http://linux.die.net/man/5/proc)\r\n\r\nThe process ID (`pid`) of the process that was most recently created on the system.\r\n\r\nMin | Max | Units | Metric Type | Data Type \r\n:---: | :---: | :---: | ---: | ---: |\r\n`null` | `null` | `null` | raw | [integer](https://github.com/doc-metrix/data-types#integer)\r\n\r\n\r\n#### [uptime](http://linux.die.net/man/5/proc)\r\n\r\nThe amount of time (in seconds) that the system has been running since the last reboot.\r\n\r\nMin | Max | Units | Metric Type | Data Type \r\n:---: | :---: | :---: | ---: | ---: |\r\n0 | `MAX_FLOAT` | [s](https://github.com/doc-metrix/units#s) | raw | [time](https://github.com/doc-metrix/data-types#time)\r\n\r\n\r\n===\r\n## Contributing\r\n\r\nTo contribute to this specification, see the contributing [guide](https://github.com/doc-metrix/contributing). Any updates to the specification should be tagged.\r\n\r\n``` bash\r\n$ git tag -a <major.minor.patch> -m \"[UPDATE] version.\"\r\n$ git push origin <major.minor.patch>\r\n```\r\n\r\nUse [semantic versioning](http://semver.org/) (semvar) for communicating versions.\r\n\r\n*\tAny new metrics should be communicated as `minor` updates.\r\n*\tAny corrections/value modifications should be `patches`.\r\n* \tAny specification restructuring (changing field names, removing fields, etc) should be communicated as a `major` update.\r\n\r\n\r\n===\r\n## Usage\r\n\r\nThe specification is stored as [JSON](http://json.org/), a lightweight data-interchange format. Many languages provide JSON support: [JavaScript](http://www.json.org/js.html), [Python](https://docs.python.org/2/library/json.html), [Go](http://golang.org/pkg/encoding/json/), [PHP](http://php.net/manual/en/book.json.php), [Java](http://json.org/java/), [Haskell](http://hackage.haskell.org/package/json), and [others](http://json.org/).\r\n\r\nYou are free to use the JSON specification, as is. Simply copy the file and use accordingly.\r\n\r\nFor those using package managers to manage dependencies, we provide package manager support, as outlined below.\r\n\r\n\r\n### Bower\r\n\r\nThe specification is registered as a [Bower](http://bower.io) package. Bower provides a straightforward means for managing dependencies.\r\n\r\nIn order to use Bower, you must first install [Node.js](http://nodejs.org/) and [Git](http://git-scm.com/book/en/Getting-Started-Installing-Git). Once the prerequisites are installed,\r\n\r\n``` bash\r\n$ npm install -g bower\r\n```\r\n\r\nTo [install](http://bower.io/docs/api/#install) the latest specification,\r\n\r\n``` bash\r\n$ bower install doc-metrix-general\r\n```\r\n\r\nBower will place the specification in a `bower_components/` directory within the current working directory.\r\n\r\nTo [update](http://bower.io/docs/api/#update) to the latest specification,\r\n\r\n``` bash\r\n$ bower update doc-metrix-general\r\n```\r\n\r\n\r\n### Utilities\r\n\r\nList of utilities using this specification:\r\n\r\n*\t[Node.js Module](https://github.com/doc-metrix/general-node)\r\n\r\n\r\n---\r\n## License\r\n\r\n[MIT license](http://opensource.org/licenses/MIT). \r\n\r\n\r\n---\r\n## Copyright\r\n\r\nCopyright &copy; 2014. NodePrime.\r\n\r\n\r\n[git-tag-image]: http://img.shields.io/github/tag/doc-metrix/general.svg\r\n[git-tag-url]: https://github.com/doc-metrix/general/tags\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}